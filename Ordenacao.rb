class Ordenacao

	attr_reader :numeros

	def initialize(numeros)
		@numeros = numeros
	end

	def busca_posicao_menor(posicao) 
		menor = @numeros[posicao]
		posicao_do_menor = posicao

		for i in posicao..@numeros.length - 1
			if @numeros[i] < menor
				menor = @numeros[i]
				posicao_do_menor = i
			end
		end

		posicao_do_menor
	end

	def selection_sort() 
		for i in 0..@numeros.length - 1
			posicao_do_menor = busca_posicao_menor i

			numero_atual = @numeros[i]
			numero_menor = @numeros[posicao_do_menor]

			@numeros[i] = numero_menor
			@numeros[posicao_do_menor] = numero_atual
		end
	end

	def bubble_sort()
		for i in 0..@numeros.length - 1
			for j in i + 1..@numeros.length - 1
				if @numeros[j] < @numeros[i]
					aux = @numeros[j]
					@numeros[j] = @numeros[i]
					@numeros[i] = aux 
				end
			end
		end
	end

end

ordenacao = Ordenacao.new([
	84336, 31611, 66247, 13523, 61973, 23724, 60072, 53081, 63411, 69721, 9867, 68787, 17614, 17245, 98406, 84219, 36299, 46356, 39791, 24248, 75159, 27731, 57244, 82395, 24080, 60533, 27837, 3291, 50498, 8508, 61129, 1675, 57616, 93928, 71818, 99894, 69120, 65628, 19552, 35646, 72132, 50587, 90601, 86728, 95515, 39113, 33811, 16420, 64260, 53327, 80506, 99819, 67475, 46876, 14528, 77502, 33757, 61617, 14112, 69249, 97705, 88576, 88030, 52643, 43188, 10858, 49610, 85852, 60345, 81564, 34748, 9328, 16265, 21593, 33784, 79569, 88095, 37401, 15771, 69681, 25275, 72904, 66658, 58606, 11380, 23230, 83128, 86866, 74273, 39249, 35416, 88247, 95706, 17978, 1027, 68444, 94037, 17772, 39397, 92879, 13807, 53599, 45065, 42484, 2011, 65447, 77645, 47467, 20220, 57695, 58372, 42255, 60088, 54651, 22285, 62893, 96819, 97596, 12275, 94363, 39095, 38856, 86105, 38557, 2380, 66821, 74815, 23560, 83328, 85062, 67572, 18919, 39812, 36666, 23313, 18086, 22498, 2646, 80606, 71586, 41110, 47585, 5693, 47801, 64461, 73547, 84028, 51606, 97453, 21606, 9441, 25579, 18629, 9842, 41404, 42674, 49315, 24896, 24715, 15207, 75132, 66117, 42217, 44086, 72552, 50552, 37877, 69740, 72898, 46334, 84753, 94935, 78434, 60374, 28580, 46993, 22029, 31235, 75514, 70948, 12718, 67156, 46804, 10135, 76767, 71008, 77812, 13405, 40022, 35962, 35730, 93198, 83426, 49679, 39974, 96994, 43560, 84763, 86440, 11644, 3475, 78125, 98528, 90283, 78974, 57083, 68912, 21458, 57649, 23860, 87926, 4901, 36201, 69446, 27633, 9430, 71333, 78521, 71202, 55053, 6892, 10125, 25042, 87385, 99725, 85759, 14100, 39166, 65924, 8083, 2778, 37611, 76030, 12750, 20057, 78170, 75754, 51462, 27533, 25485, 76997, 40516, 34852, 68412, 85425, 91447, 17754, 38721, 99633, 91483, 954, 64560, 49614, 65313, 51627, 59129, 80138, 55078, 54741, 9392, 87789, 29216, 10821, 78114, 66286, 36446, 21604, 75706, 30916, 86990, 93159, 42517, 23967, 77476, 77518, 54301, 95478, 28004, 47510, 15441, 58525, 48894, 38779, 88017, 53206, 88599, 62284, 50524, 21292, 74634, 98172, 42815, 45043, 87582, 741, 17667, 35985, 2206, 11211, 42761, 91547, 2279, 56683, 60420, 95422, 84776, 44626, 17354
])

tempo_inicio = Time.now

ordenacao.bubble_sort()

tempo_fim = Time.now

delta = (tempo_fim - tempo_inicio) * 1000

puts "Total: " + "%.2f" % delta + " ms."